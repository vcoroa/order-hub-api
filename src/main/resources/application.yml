server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${SERVER_SERVLET_CONTEXT_PATH:/api}

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  application:
    name: ${SPRING_APPLICATION_NAME:orderhub}

  mvc:
    throw-exception-if-no-handler-found: ${SPRING_MVC_THROW_EXCEPTION_IF_NO_HANDLER_FOUND:true}
    web:
      resources:
        add-mappings: ${SPRING_WEB_RESOURCES_ADD_MAPPINGS:false}

  # CACHE SIMPLES (in-memory)
  cache:
    type: ${SPRING_CACHE_TYPE:simple}
    cache-names: ${SPRING_CACHE_CACHE_NAMES:dados-parceiros, pedidos, parceiros}

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/pedidos_b2b}
    username: ${SPRING_DATASOURCE_USERNAME:pedidos_user}
    password: ${SPRING_DATASOURCE_PASSWORD:pedidos_pass}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}
    hikari:
      maximum-pool-size: ${SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE:20}
      minimum-idle: ${SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE:5}
      connection-timeout: ${SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT:600000}
      max-lifetime: ${SPRING_DATASOURCE_HIKARI_MAX_LIFETIME:1800000}

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: ${SPRING_JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
        format_sql: ${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:true}
        order_inserts: ${SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_INSERTS:true}
        order_updates: ${SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_UPDATES:true}
        jdbc:
          batch_size: ${SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_SIZE:25}
          batch_versioned_data: ${SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_VERSIONED_DATA:true}
    database-platform: ${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}

  task:
    execution:
      pool:
        core-size: ${SPRING_TASK_EXECUTION_POOL_CORE_SIZE:10}
        max-size: ${SPRING_TASK_EXECUTION_POOL_MAX_SIZE:50}
        queue-capacity: ${SPRING_TASK_EXECUTION_POOL_QUEUE_CAPACITY:100}

management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:*}
      base-path: ${MANAGEMENT_ENDPOINTS_WEB_BASE_PATH:/actuator}
  endpoint:
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:always}
      show-components: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_COMPONENTS:always}
    mappings:
      enabled: ${MANAGEMENT_ENDPOINT_MAPPINGS_ENABLED:true}
    metrics:
      enabled: ${MANAGEMENT_ENDPOINT_METRICS_ENABLED:true}
    prometheus:
      enabled: ${MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED:true}
  metrics:
    export:
      prometheus:
        enabled: ${MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED:true}

logging:
  level:
    br.com.vpsconsulting.orderhub: ${LOGGING_LEVEL_BR_COM_VPSCONSULTING_ORDERHUB:INFO}
    org.springframework.web: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB:INFO}
    org.springframework.security: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY:DEBUG}
    org.hibernate: ${LOGGING_LEVEL_ORG_HIBERNATE:WARN}
    org.hibernate.SQL: ${LOGGING_LEVEL_ORG_HIBERNATE_SQL:INFO}
  pattern:
    console: ${LOGGING_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss} - %msg%n}
    file: ${LOGGING_PATTERN_FILE:%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n}

---
# Profile de desenvolvimento
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    show-sql: ${SPRING_JPA_SHOW_SQL_DEV:true}
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO_DEV:create-drop}

  # Cache simples para desenvolvimento
  cache:
    type: ${SPRING_CACHE_TYPE_DEV:simple}

logging:
  level:
    br.com.vpsconsulting.orderhub: ${LOGGING_LEVEL_BR_COM_VPSCONSULTING_ORDERHUB_DEV:DEBUG}
    org.hibernate.SQL: ${LOGGING_LEVEL_ORG_HIBERNATE_SQL_DEV:DEBUG}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL_BASICBINDER_DEV:TRACE}